@inject SignInManager<Korisnik> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="container">

    <ul class="nav nav-pills flex-column">
        <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profil</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
        @if (hasExternalLogins)
        {
            <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">Eksterne prijave</a></li>
        }
        <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Dvostepena autentifikacija</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Lični podaci</a></li>
        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item"><a href="/RoleManager/" class="nav-link">Role manager</a></li>
            <li class="nav-item"><a href="/UserRoles/" class="nav-link">Korisničke role</a></li>
            <li class="nav-item"><a href="/Kategorija/" class="nav-link">Kategorije</a></li>
            <li class="nav-item"><a href="/Potkategorija/" class="nav-link">Potkategorije</a></li>
        }
    </ul>

</div>